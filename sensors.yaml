
  - platform: template
    sensors:
      back_lock_last_action:
        friendly_name: 'Lock Last Action'
        value_template: >

          {% if
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level', '1')
          and
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control', '6')
          and
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type', '19') %}
          Unlocked: Graham
          {% endif %}

          {% if
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level', '2')
          and
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control', '6')
          and
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type', '19') %}
          Unlocked: Joyce
          {% endif %}

          {% if
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level', '3')
          and
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control', '6')
          and
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type', '19') %}
          Unlocked: Oliver
          {% endif %}

          {% if
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level', '1')
          and
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control', '2')
          and
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type', '22') %}
          Unlocked: Inside Deadbolt
          {% endif %}

          {% if
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level', '3')
          and
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control', '5')
          and
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type', '18') %}
          Locked: Oliver
          {% endif %}

          {% if
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level', '1')
          and
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control', '1')
          and
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type', '21') %}
          Locked: Inside Deadbolt
          {% endif %}

          {% if
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level', '0')
          and
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control', '5')
          and
          is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type', '18') %}
          Locked: Outside Keypad
          {% endif %}

# The "back_lock_last_action" state value "Locked: Outside Keypad" can be used to detect being away from the house.

  - platform: template
    sensors:
      lock_battery:
        friendly_name: 'Lock Battery'
        value_template: '{{ states.zwave.schlage_be469nxcen_touchscreen_deadbolt.attributes.battery_level|default(-1)|int }}'
        unit_of_measurement: '%' 

  - platform: template
    sensors:
      temp_diff:
        friendly_name: 'In-Out Temperature Diff'
        value_template: '{{ ((states.sensor.temperature.state | float) - (states.sensor.mysensors_bme280_2_2.state | float)) | round(1) }}'
        unit_of_measurement: '째C'

  - platform: template
    sensors:
      furnace_energy:
        friendly_name: 'Furnace Energy'
        unit_of_measurement: 'watts'
        value_template: >
          {% if
          is_state('switch.heat1','off') and  is_state('switch.heat0','off') %} 0
          {% endif %}
          {% if
          is_state('switch.heat1','off') and  is_state('switch.heat0','on') %} 4
          {% endif %}
          {% if
          is_state('switch.heat1','on') and  is_state('switch.heat0','off') %} 7
          {% endif %}        
          {% if
          is_state('switch.heat1','on') and  is_state('switch.heat0','on') %} 10
          {% endif %}
        
  - platform: command_line
    name: Yesterday Rainfall
    unit_of_measurement: 'mm'
    scan_interval: 10800
    command: 'python3 /config/getrain.py'
    
  - platform: command_line
    name: Medalert1 Check
    scan_interval: 600
    command: 'python3 /config/medalert1_check.py'

  - platform: mqtt
    state_topic: '/home/multisensor1'
    name: 'Temperature'
    unit_of_measurement: '째C'
    value_template: '{{ value_json.temperature }}'

  - platform: mqtt
    state_topic: '/home/multisensor1'
    name: 'Humidity'
    unit_of_measurement: '%'
    value_template: '{{ value_json.humidity }}'

  - platform: mqtt
    state_topic: '/home/heatstate'
    name: 'Heat State'
    value_template: '{{ value_json.heatstate }}'

  - platform: mqtt
    state_topic: '/home/basement/flood'
    name: 'Flood'

  - platform: mqtt
    state_topic: '/home/TH_sensor1'
    name: 'Remote Temperature'
    unit_of_measurement: '째C'
    value_template: '{{ value_json.temperature }}'

  - platform: mqtt
    state_topic: '/home/TH_sensor1'
    name: 'Remote Humidity'
    unit_of_measurement: '%'
    value_template: '{{ value_json.humidity }}'
    

  # - platform: systemmonitor
    # resources:
      # - type: processor_use

  # - platform: command_line
    # name: CPU Temperature
    # unit_of_measurement: "째C"
    # scan_interval: 300
    # command: "python3 /config/cputemp.py"

  - platform: random
    name: lr_random
    minimum: 0
    maximum: 30
    scan_interval: 3600

  - platform: random
    name: br_random
    minimum: 0
    maximum: 10
    scan_interval: 3600

  - platform: time_date
    display_options:
      - 'time'
      
