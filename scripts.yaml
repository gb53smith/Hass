furnace_timer:
  alias: Resetable Delay to Heat0
  sequence:
  - service: homeassistant.turn_off
    data:
      entity_id:
      - script.timer_heat0
      - script.timer_heat1
      - input_boolean.heat1
  - service: homeassistant.turn_on
    data:
      entity_id:
      - input_boolean.heat0
      - script.timer_heat0
  - service: input_number.set_value
    data:
      entity_id: input_number.furnace_power
      value: 7.8
timer_heat0:
  alias: Heat0 Timer
  sequence:
  - delay:
      minutes: 7
      seconds: 80
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.heat0
  - service: homeassistant.turn_on
    data:
      entity_id:
      - input_boolean.heat1
      - script.timer_heat1
  - service: input_number.set_value
    data:
      entity_id: input_number.furnace_power
      value: 13.6
timer_heat1:
  alias: Heat1 Timer
  sequence:
  - delay:
      minutes: 10
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.heat0
  - service: input_number.set_value
    data:
      entity_id: input_number.furnace_power
      value: 19.5
ir_back:
  alias: Irrigate Back
  sequence:
  - service: switch.turn_on
    entity_id: switch.back_irrigation
  - delay: 00:{{ states('input_number.slider_delay_b') | int }}:00
  - service: switch.turn_off
    entity_id: switch.back_irrigation
ir_front:
  alias: Irrigate Front
  sequence:
  - service: switch.turn_on
    entity_id: switch.front_irrigation
  - delay: 00:{{ states('input_number.slider_delay_f') | int }}:00
  - service: switch.turn_off
    entity_id: switch.front_irrigation
  mode: single
ir_deck:
  alias: Irrigate Deck
  sequence:
  - service: switch.turn_on
    entity_id: switch.deck_irrigation
  - delay: 00:{{ states('input_number.slider_delay_d') | int }}:00
  - service: switch.turn_off
    entity_id: switch.deck_irrigation
energy:
  alias: Energy Integrator
  sequence:
  - service: python_script.energy
    data:
      power: furnace_power
      last_power: last_power
      energy_accum: energy_accum
energy_hour:
  alias: Hourly Energy
  sequence:
  - wait_template: '{{ is_state(''script.energy'', ''off'') }}'
  - service: python_script.energy_hour
    data:
      power: furnace_power
      last_power: last_power
      energy_accum: energy_accum
      hourly_energy: hourly_energy
burglar_alarm_timer:
  alias: Burglar Alarm Timer
  sequence:
  - service: switch.turn_on
    entity_id: switch.siren_gen5
  - delay: 0:02:00
  - service: switch.turn_off
    entity_id: switch.siren_gen5
  mode: single
hvac_cool_heat:
  alias: HVAC Cool Heat
  description: Start cooling temperature >= cool_setpoint + 1.5.  Stop cooling with
    temperature < cool_setpoint - 1.0
  variables:
    heatpump_mode: '{{states(''climate.mitsubishi_heatpump'')}}'
    cool_setpoint: '{{states(''input_number.slider_ac_home'')}}'
    heat_setpoint: '{{states(''input_number.slider_home'')}}'
    temperature: '{{states(''sensor.house_temperature'')}}'
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{temperature >= cool_setpoint + 1.5}}'
      sequence:
      - condition: template
        value_template: '{{heatpump_mode != ''cool''}}'
      - service: climate.set_hvac_mode
        data:
          hvac_mode: cool
        target:
          entity_id: climate.mitsubishi_heatpump
      - delay:
          seconds: 5
      - service: climate.set_temperature
        data:
          temperature: '{{cool_setpoint}}'
        target:
          entity_id: climate.mitsubishi_heatpump
    - conditions:
      - condition: template
        value_template: '{{temperature <= cool_setpoint - 1.0}}'
      - condition: template
        value_template: '{{temperature > heat_setpoint + 0.3}}'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.house
      - condition: template
        value_template: '{{heatpump_mode != ''off''}}'
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.mitsubishi_heatpump
    - conditions:
      - condition: template
        value_template: '{{temperature <= heat_setpoint - 0.5}}'
      - condition: template
        value_template: '{{temperature >= heat_setpoint - 1.0}}'
      - condition: template
        value_template: '{{heatpump_mode != ''heat''}}'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat
        target:
          entity_id: climate.mitsubishi_heatpump
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.house
      - delay:
          seconds: 5
      - service: climate.set_temperature
        data:
          temperature: '{{heat_setpoint}}'
        target:
          entity_id: climate.mitsubishi_heatpump
    - conditions:
      - condition: template
        value_template: '{{temperature < heat_setpoint - 1.0}}'
      - condition: template
        value_template: '{{heatpump_mode != ''off''}}'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.mitsubishi_heatpump
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'on'
        target:
          entity_id: climate.house
  mode: single
hvac_cool_only:
  alias: HVAC Cool Only
  description: Controls cooling using heat pump. Heating done by furnace.  A different
    setpoint is passed depending on being away our just sleeping.
  variables:
    heatpump_mode: '{{states(''climate.mitsubishi_heatpump'')}}'
  sequence:
  - service: climate.set_hvac_mode
    data:
      hvac_mode: heat
    target:
      entity_id: climate.house
  - choose:
    - conditions:
      - condition: template
        value_template: '{{temperature >= cool_setpoint + 1.5}}'
      sequence:
      - condition: template
        value_template: '{{heatpump_mode != ''cool''}}'
      - service: climate.set_hvac_mode
        data:
          hvac_mode: cool
        target:
          entity_id: climate.mitsubishi_heatpump
      - delay:
          seconds: 5
      - service: climate.set_temperature
        data:
          temperature: '{{cool_setpoint}}'
        target:
          entity_id: climate.mitsubishi_heatpump
    - conditions:
      - condition: template
        value_template: '{{temperature <= cool_setpoint - 1.0}}'
      sequence:
      - condition: template
        value_template: '{{heatpump_mode != ''off''}}'
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.mitsubishi_heatpump
  mode: single
advanced_irrigate_front:
  alias: Advanced Irrigate Front
  sequence:
  - condition: state
    entity_id: input_boolean.enable_irrigation_front
    state: 'on'
  - service: switch.turn_off
    entity_id: switch.back_irrigation
  - service: switch.turn_off
    entity_id: switch.deck_irrigation
  - delay:
      seconds: 10
  - service: switch.turn_on
    entity_id: switch.front_irrigation
  - delay: 00:{{ (states('input_number.slider_delay_f') | float * states('input_number.irrigation_multiplier')
      | float) | round()}}:00
  - service: switch.turn_off
    entity_id: switch.front_irrigation
  mode: single
advanced_irrigate_back:
  alias: Advanced Irrigate Back
  sequence:
  - condition: state
    entity_id: input_boolean.enable_irrigation_back
    state: 'on'
  - service: switch.turn_off
    entity_id: switch.front_irrigation
  - service: switch.turn_off
    entity_id: switch.deck_irrigation
  - delay:
      seconds: 10
  - service: switch.turn_on
    entity_id: switch.back_irrigation
  - delay: 00:{{ (states('input_number.slider_delay_b') | float * states('input_number.irrigation_multiplier')
      | float) | round()}}:00
  - service: switch.turn_off
    entity_id: switch.back_irrigation
  mode: single
advanced_irrigate_deck:
  alias: Advanced Irrigate Deck
  sequence:
  - condition: state
    entity_id: input_boolean.enable_irrigation_deck
    state: 'on'
  - service: switch.turn_off
    entity_id: switch.front_irrigation
  - service: switch.turn_off
    entity_id: switch.back_irrigation
  - delay:
      seconds: 10
  - service: switch.turn_on
    entity_id: switch.deck_irrigation
  - delay: 00:{{ (states('input_number.slider_delay_d') | float * states('input_number.irrigation_multiplier')
      | float) | round()}}:00
  - service: switch.turn_off
    entity_id: switch.deck_irrigation
  mode: single
