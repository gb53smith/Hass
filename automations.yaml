- id: ee79e6868aca40588a2b5d40bd9846e4
  alias: Irrigation Safety
  description: In case some interruption occurs while a zone is ON. I assume that
    the irrigation cycle is less than one hour.
  trigger:
  - platform: time
    at: input_datetime.irrigation_am_stop_time
  - platform: time
    at: input_datetime.irrigation_pm_stop_time
  action:
  - service: homeassistant.turn_off
    entity_id: group.irrigation_switches
    enabled: true
  initial_state: true
  mode: single
- id: cb7eba0fd302410b9ea9cead3639b39c
  alias: Living Room Light ON
  description: Turn ON on hour before sunset an setup random ON/OFF time for lights
    when Away
  trigger:
  - platform: sun
    event: sunset
    offset: -01:00:00
  action:
  - service: switch.turn_on
    entity_id: switch.leviton_dzr151lz_binary_scene_switch_switch
  - service: python_script.random_lights
  initial_state: true
  mode: single
- id: e97eaa7390304a73bab4af0c25710585
  alias: Living Room Light OFF at Home
  description: ' Turn OFF at input_datetime.lr_off_time ONLY when not away'
  trigger:
  - platform: template
    value_template: '{{ (state_attr(''input_datetime.lr_off_time'', ''timestamp'')
      | int  | timestamp_custom("%H:%M", False)) == states(''sensor.time'')}}

      '
  condition:
  - condition: state
    entity_id: binary_sensor.away
    state: 'off'
  action:
  - service: switch.turn_off
    entity_id: switch.leviton_dzr151lz_binary_scene_switch_switch
  initial_state: true
  mode: single
- id: 0c274958b4da4bb39c9470ccab241b3d
  alias: Living Room Light OFF when away
  trigger:
  - platform: template
    value_template: '{{ (state_attr(''input_datetime.lr_off_time_random'', ''timestamp'')
      | int  | timestamp_custom("%H:%M", False)) == states(''sensor.time'')}}

      '
  condition:
  - condition: state
    entity_id: binary_sensor.away
    state: 'on'
  action:
  - service: switch.turn_off
    entity_id: switch.leviton_dzr151lz_binary_scene_switch_switch
  initial_state: true
- id: 19e7ea5237134f478ebb77dc312976c3
  alias: Bedroom Room Light ON when on away
  trigger:
  - platform: template
    value_template: '{{ (state_attr(''input_datetime.br_on_time_random'', ''timestamp'')
      | int  | timestamp_custom("%H:%M", False)) == states(''sensor.time'')}}

      '
  condition:
  - condition: state
    entity_id: binary_sensor.away
    state: 'on'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.scene_capable_switch_on_off
  initial_state: true
- id: f4ccf77d963c4b729311199cb14bd864
  alias: Bedroom Room Light OFF when on away
  trigger:
  - platform: template
    value_template: '{{ (state_attr(''input_datetime.br_off_time_random'', ''timestamp'')
      | int  | timestamp_custom("%H:%M", False)) == states(''sensor.time'')}}

      '
  condition:
  - condition: state
    entity_id: binary_sensor.away
    state: 'on'
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.scene_capable_switch_on_off
  initial_state: true
- id: 48259ef77a1f4882955e69383e0820e8
  alias: Set Home Setpoint
  description: 'Temperature Control Notes

    binary_sensor.away is controlled by input_text.lock_last_action and by input_boolean.vacation.

    Set by locking back door either by Me or Oliver or input_boolean.vacation = "on".

    input_binary.vacation is controlled by GUI slide switch.

    When binary_sensor.away is ON the temperature set point is set to away temp.

    The back door must be unlocked or locked from the inside to turn OFF the binary_sensor.away
    and return to normal heating schedule.

    The away temperature can be adjusted to pre-heat the house remotely.

    binary_sensor.away state is used to control the indicator LED on the thermostat.'
  trigger:
  - platform: template
    value_template: '{{ (state_attr(''input_datetime.heat_on_time'', ''timestamp'')
      | int  | timestamp_custom("%H:%M", False)) == states(''sensor.time'')}}

      '
  condition:
  - condition: state
    entity_id: binary_sensor.away
    state: 'off'
  action:
  - service: climate.set_temperature
    data:
      entity_id: climate.house
      temperature: '{{ states(''input_number.slider_home'')}}'
  - service: climate.set_temperature
    data:
      entity_id: climate.summer_fan
      temperature: '{{ states(''input_number.temperature_fan'')}}'
  initial_state: true
  mode: single
- id: b2a9dbd5f844423592514eff70d6e9f3
  alias: Set Asleep Setpoint
  description: Change thermostat set point to slider_away temp at datetime.heat_off_time
  trigger:
  - platform: template
    value_template: '{{ (state_attr(''input_datetime.heat_off_time'', ''timestamp'')
      | int  | timestamp_custom("%H:%M", False)) == states(''sensor.time'')}}

      '
  action:
  - service: climate.set_temperature
    data:
      entity_id: climate.house
      temperature: '{{ states(''input_number.slider_away'')}}'
  initial_state: true
  mode: single
- id: aa08eec161f74481ae3ddc94782486eb
  alias: Furnace Safety
  description: Turn furnace OFF if its has been ON 7 minutes and the temperature is
    above the set point.
  trigger:
  - platform: state
    entity_id: switch.furnace
    to: 'on'
    for: 0:07:00
  condition:
  - condition: template
    value_template: '{{ state_attr(''climate.house'', ''current_temperature'') | float
      > state_attr(''climate.house'', ''temperature'') | float }}

      '
  action:
  - service: switch.turn_off
    entity_id: switch.furnace
  initial_state: true
  mode: single
- id: 32f210d034a04694b8a7b7dc0df080f4
  alias: Away
  description: 'Turn temperature set point down if away set when door locked from
    outside keypad #Note: A normal template sensor did not trigger so the binary_sensor
    was used instead.'
  trigger:
  - platform: state
    entity_id: binary_sensor.away
    to: 'on'
  action:
  - service: climate.set_temperature
    data:
      entity_id: climate.house
      temperature: '{{ states(''input_number.slider_away'')}}'
  - service: climate.set_temperature
    data:
      entity_id: climate.summer_fan
      temperature: '{{ states(''input_number.temperature_fan_away'')}}'
  - service: climate.set_temperature
    data:
      entity_id: climate.mitsubishi_heatpump
      temperature: '{{ states(''input_number.slider_ac_away'')}}'
  initial_state: true
  mode: single
- id: d5c8e48aa51549caa1d295a0a4c0b370
  alias: Home
  description: '# Return temperature set point when returning

    # between heat ON and OFF times if not on vacation'
  trigger:
  - platform: state
    entity_id: binary_sensor.away
    to: 'off'
  condition:
  - condition: template
    value_template: "{{ (now().hour * 60 + now().minute) * 60  \n    > state_attr('input_datetime.heat_on_time',
      'timestamp') and \n    (now().hour * 60 + now().minute) * 60 \n    < state_attr('input_datetime.heat_off_time',
      'timestamp') }}\n"
  action:
  - service: climate.set_temperature
    data:
      entity_id: climate.house
      temperature: '{{ states(''input_number.slider_home'')}}'
  - service: climate.set_temperature
    data:
      entity_id: climate.summer_fan
      temperature: '{{ states(''input_number.temperature_fan'')}}'
  - service: climate.set_temperature
    data:
      entity_id: climate.mitsubishi_heatpump
      temperature: '{{ states(''input_number.slider_ac_home'')}}'
  initial_state: true
  mode: single
- id: 544aeec69a024d7c8a12e15c8ff4eaae
  alias: Furnace Ramp ON
  description: Added 30 second filter for when furnace is turned ON and OFF at  the
    heat ON time.  Set point change triggers furnace switch ON while hvac.py turns
    it back OFF again if heat pump is turned ON to heat as well.
  trigger:
  - platform: state
    entity_id: switch.furnace
    to: 'on'
    for: 0:00:30
  action:
  - service: script.turn_on
    entity_id: script.furnace_timer
  initial_state: true
  mode: single
- id: 36a35b2cef8c42d8a407500247e8e08a
  alias: Furnace OFF
  description: 'After a delay for the energy script to finish, clear last_power.  It
    can get stuck if there is a power spike

    that returns to zero.  energy.py does not see the power to returning 0 and keeps
    the spiked value instead.'
  trigger:
  - platform: state
    entity_id: switch.furnace
    to: 'off'
  action:
  - service: input_number.set_value
    data:
      entity_id: input_number.furnace_power
      value: 0
  - service: homeassistant.turn_off
    entity_id:
    - script.furnace_timer
    - script.timer_heat0
    - script.timer_heat1
    - input_boolean.heat1
    - input_boolean.heat0
  - delay: 00:00:02
  - service: input_number.set_value
    data:
      entity_id: input_number.last_power
      value: 0
  initial_state: true
  mode: single
- id: 7c8c7380a4a7468283982bfd5d5be4e9
  alias: Notify House Out of Range Temperature
  description: Send Notification if temperature reaches min_temp or max_temp.
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: template
    value_template: '{% if is_state(''binary_sensor.away'', ''on'') %} {{ states(''sensor.house_temperature'')
      | float > 30.0 }}

      {% else %}

      {{ states(''sensor.house_temperature'') | float > 26.0 }}

      {% endif %}'
  action:
  - service: notify.mobile_app_grahams_iphone
    data:
      message: House Temperature Out of Range
  initial_state: true
  mode: single
- id: df3e71a6d3fb4f0bbe53f6768b781d2e
  alias: Notify Wine Out of Range Temperature
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.winecellar_temperature
      below: 10
    - condition: numeric_state
      entity_id: sensor.winecellar_temperature
      above: 15.5
  action:
  - service: notify.mobile_app_grahams_iphone
    data:
      message: Wine Cellar Temperature Out of Range
  initial_state: true
  mode: single
- id: 5207535655214a13afc854fcd6c14572
  alias: Notify Battery Needs Changing
  description: ' Send Notification if Outdoor battery voltage is below 3.2 volts and
    needs to be charged.'
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.mysensors_bme280_2_4'') | float < 3.2 }}'
  action:
  - service: notify.mobile_app_grahams_iphone
    data:
      message: Outdoor battery needs to be charged.
  initial_state: true
  mode: single
- id: b023ab62caba4b35bd82e014c24f6e20
  alias: Basement Flood Alarm
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.flood
    to: 'ON'
  action:
    service: notify.mobile_app_grahams_iphone
    data:
      message: Basement Flood Detected!
- id: 2c587360c4a8480faa87bf3e388f1cac
  alias: Watchdog Alarm
  description: Send a notice to iPhone if MultiSensor3 is disconnected from WiFi an
    UPS ONline
  trigger:
  - platform: time_pattern
    minutes: /10
  condition:
  - condition: state
    entity_id: binary_sensor.ping_ms3
    state: 'off'
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.myups_status
      state: Online
    - condition: or
      conditions:
      - condition: state
        entity_id: sensor.myups_status
        state: Online Battery Charging
  action:
  - service: notify.mobile_app_grahams_iphone
    data:
      message: Multisensor Failed!
  initial_state: true
  mode: single
- id: aba6c8423f0848528ceb82d697b8543e
  alias: HA Restarted
  description: 'Turn all switches OFF on reboot and send notification 10 minutes later.

    Restore heat if not on vacation and  time is between heat ON and heat OFF times.

    Restore summer fan depending on vacation status.

    Turn plant light ON if automation ON and time is in range.

    Note !secrets does not work in template.'
  trigger:
  - platform: homeassistant
    event: start
  action:
  - service: homeassistant.turn_off
    data:
      entity_id: group.switches_off_at_restart
  - service: climate.set_temperature
    data:
      entity_id: climate.house
      temperature: "{% if is_state('input_boolean.vacation', 'off') and \n  (now().hour
        * 60 + now().minute) * 60  \n  > state_attr('input_datetime.heat_on_time',
        'timestamp') and \n  (now().hour * 60 + now().minute) * 60 \n  < state_attr('input_datetime.heat_off_time',
        'timestamp') %}\n  {{ states('input_number.slider_home')}}\n{% else %}\n  {{
        states('input_number.slider_away')}}\n{% endif %}\n"
  - service: climate.set_temperature
    data:
      entity_id: climate.summer_fan
      temperature: "{% if is_state('input_boolean.vacation', 'off') %}\n  25\n{% else
        %}\n  30\n{% endif %}\n"
  - service: input_number.set_value
    data:
      entity_id: input_number.furnace_power
      value: 0
  - service: python_script.random_lights
    data: {}
  - service: automation.trigger
    entity_id: automation.furnace_state
  - service: fan.set_percentage
    data:
      percentage: 40
    target:
      entity_id: fan.hepa_filter_fan
  - service: climate.set_hvac_mode
    data:
      hvac_mode: 'off'
    target:
      entity_id: climate.house
  - delay:
      minutes: 10
  - service: notify.mobile_app_grahams_iphone
    data:
      message: HA Restarted
  initial_state: true
  mode: single
- id: bee7347e41de4f4e96c85c52ab3ba0f8
  alias: Home Slider Changed
  description: When home slider changes, change heating set point only when home and
    the time is between heat ON and heat OFF times.
  trigger:
  - platform: state
    entity_id: input_number.slider_home
  condition:
  - condition: state
    entity_id: binary_sensor.away
    state: 'off'
  action:
  - service: climate.set_temperature
    data:
      entity_id: climate.house
      temperature: '{{ states(''input_number.slider_home'')}}'
  initial_state: true
  mode: single
- id: 381ae755dedb473d96ca3df26bd0e751
  alias: Away Slider Changed
  description: When home slider changes, change heating set point.
  trigger:
  - platform: state
    entity_id: input_number.slider_away
  condition:
  - condition: state
    entity_id: binary_sensor.away
    state: 'on'
  action:
  - service: climate.set_temperature
    data:
      entity_id: climate.house
      temperature: '{{ states(''input_number.slider_away'')}}'
  initial_state: true
  mode: single
- id: 75ff7b3c3b6c4d8ea9bca710f4aa51e0
  alias: Increment fan ON counter
  description: Count how many minutes the furnace fan in ON to determine when the
    air filter needs replacing.
  trigger:
  - platform: time_pattern
    minutes: /1
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: switch.fan
      state: 'on'
    - condition: state
      entity_id: switch.furnace
      state: 'on'
  action:
  - service: counter.increment
    entity_id: counter.fan_on_minutes
  initial_state: true
  mode: single
- id: 17e8bb84eb9d47888792ec4646772ec4
  alias: Hourly Temperature Difference
  initial_state: true
  trigger:
  - platform: time_pattern
    minutes: /5
  action:
    service: python_script.temp_diff
    data:
      temp_diff: temp_diff
      temp_diff_accum: temp_diff_accum
      hour_diff: hour_diff
- id: b6c8df5f4b884258bb0ce456a9900986
  alias: Energy Integration
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_number.furnace_power
  action:
    service: script.turn_on
    entity_id: script.energy
- id: b37947cb4e5049459899cecfdef58379
  alias: Hourly Energy
  trigger:
  - platform: time_pattern
    hours: /1
  action:
  - service: script.turn_on
    entity_id: script.energy_hour
    enabled: true
  - service: input_number.set_value
    data:
      entity_id: input_number.hydro_hourly_energy
      value: '{{ states(''sensor.eagle_200_total_meter_energy_delivered'') | float
        -  states(''input_number.hydro_meter_last_hour'') | float | round(1) }}'
  - service: input_number.set_value
    data:
      entity_id: input_number.hydro_meter_last_hour
      value: '{{ states(''sensor.eagle_200_total_meter_energy_delivered'') | float
        }}'
  initial_state: true
- id: c06125f64fde49a193b1dc6c84a27e93
  alias: Daily Energy Total
  initial_state: true
  trigger:
  - platform: time_pattern
    minutes: /30
  action:
    service: python_script.hour2day
    data:
      hourly: hourly_energy
      hourly_accum: hourly_energy_accum
      daily: daily_energy
- id: 5d8af1a7b8e6454c9ac100de9af3b08d
  alias: Daily Temp Diff Average
  initial_state: true
  trigger:
  - platform: time_pattern
    minutes: /30
  action:
    service: python_script.hour2day
    data:
      hourly: hour_diff
      hourly_accum: hourly_temp_diff_accum
      daily: daily_temp_diff
      mode: average
- id: 462a791f448d479f9439e0243958ba74
  alias: HVAC
  description: Triggers a Python Script every minute to decide if heat pump should
    be cooling.  If ON the Heat Pump ON/OFF automations must be turned OFF as they
    control the heat pump while in heating mode.
  trigger:
  - platform: time_pattern
    minutes: /1
  action:
  - service: python_script.hvac
    data: {}
  mode: single
- id: 75f3710546f84017a8ad9af8833c330c
  alias: Redirect all MQTT HVAC set commands to the heatpumps
  description: " This is required because MQTT HVAC uses a separate topic for each
    command\nwhile the Mitsubishi Heatpump uses one set topic for all settings in
    a json message\n ie heatpump/_set/temperature 23  --> heatpump/set {\"temperature\":\"23.5\"}\nAdded
    wideVane every time the heat pump is turned ON as it seems to revert to \"<<\"
    for no reason."
  trigger:
  - platform: mqtt
    topic: heatpump/_set/+
  action:
  - service: mqtt.publish
    data:
      topic: '{{ "heatpump/set" }}'
      payload: "{% if trigger.topic.split(\"/\")[-1] == \"mode\" %}\n  {% if trigger.payload|upper
        == \"OFF\" %}\n    {\"power\":\"OFF\"}\n  {% elif trigger.payload == \"fan_only\"
        %}\n    {\"power\":\"ON\",\"mode\":\"FAN\"}\n  {% else %}\n    {{ \"{\\\"power\\\":\\\"ON\\\",\\\"mode\\\":\"|safe
        + trigger.payload|upper|tojson + \",\\\"wideVane\\\":\"|safe  + states('input_select.widevane')|to_json|safe
        + \"}\"}}\n  {% endif %}\n{% else %}\n  {{ \"{\" + trigger.topic.split(\"/\")[-1]|tojson
        + \":\" + trigger.payload|tojson + \"}\" }}\n{% endif %}\n"
  mode: single
- id: e42cd82395df4e798be4ad063006e0e4
  alias: Furnace State
  description: 'Sends colour info to RGB LED in MultiSensor3

    cool/off added to prevent triggers from other attributes

    Replaced heat0 and heat1 with input_number.furnace_power

    to prevent multiple trigger when furnace goes off from high

    heat0 and heat1 states are no longer used.'
  trigger:
  - platform: state
    entity_id: binary_sensor.away
  - platform: state
    entity_id: climate.mitsubishi_heatpump
    from: 'off'
    to: cool
  - platform: state
    entity_id: climate.mitsubishi_heatpump
    to: 'off'
  - platform: state
    entity_id: input_number.furnace_power
  - platform: state
    entity_id: climate.mitsubishi_heatpump
    from: 'off'
    to: heat
  action:
  - service: light.turn_on
    data:
      color_name: '{% if is_state("binary_sensor.away", "on") %} blue {% elif is_state("climate.mitsubishi_heatpump",
        "cool")%} cyan {% elif is_state("climate.mitsubishi_heatpump", "heat")%} orange
        {% elif states("input_number.furnace_power") | int > 14 %} red {% elif states("input_number.furnace_power")
        | int > 12  %} purple {% elif states("input_number.furnace_power") | int >
        6  %} yellow {% elif states("input_number.furnace_power") | int == 0  %} green
        {% else %} white {% endif %}

        '
      brightness: 200
    target:
      entity_id: light.multisensor_gen3_ms3_light
  initial_state: true
  mode: single
- id: f7b38968d7ad45cdaee935f942d8a8ad
  alias: Burglar Alarm
  description: If away, and motion is detected send text message, iPhone notification
    and turn on Siren for 2 minutes.
  trigger:
  - platform: state
    entity_id: binary_sensor.ecolink_motion_detector_sensor
    to: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.away
    state: 'on'
  action:
  - service: notify.mobile_app_grahams_iphone
    data:
      message: Graham Burglar Alarm Triggered!
  - service: script.turn_on
    data: {}
    target:
      entity_id: script.burglar_alarm_timer
  initial_state: true
  mode: single
- id: 68eef09ca6714c85a4d466bd27fde205
  alias: Last House Temperature
  trigger:
  - platform: state
    entity_id: sensor.multisensor_gen3_ms3_temperature
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.multisensor_gen3_ms3_temperature
      state: unavailable
    - condition: or
      conditions:
      - condition: state
        entity_id: sensor.multisensor_gen3_ms3_temperature
        state: unknown
  action:
  - service: input_number.set_value
    data:
      entity_id: input_number.last_house_temp
      value: '{{ states(''sensor.multisensor_gen3_ms3_temperature'')}}'
  initial_state: true
  mode: single
- id: 6bbfc94a788c4f89b4936b24e0f8c7fc
  alias: Increment Brita Days counter
  initial_state: true
  trigger:
  - platform: time
    at: 01:00:00
  action:
  - service: counter.increment
    entity_id: counter.brita_days
- id: e9cdd9717dca4fce98b51ecdd6162efb
  alias: Notify Brita Filter
  description: Send Notification if Brita Filter used for more than 90 days.
  trigger:
  - platform: template
    value_template: '{{ states(''counter.brita_days'') | float > 90.0 }}'
  action:
  - service: notify.mobile_app_grahams_iphone
    data:
      message: Brita Filter Used for 90 Days
  initial_state: true
  mode: single
- id: fcd14c971ff54bbe8bcc1d479b6c2305
  alias: Plant Dehumidifier ON
  description: 'Turn ON Dehumidifier if humidity exceeds set limits and send alarm.

    Plant Master Automation control must also be ON.  (input_boolean.plant_automation)'
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.plants_humidity'') | float(default=40) >  states(''input_number.max_humidity'')
      | float}}

      '
  condition:
  - condition: state
    entity_id: input_boolean.plant_automation
    state: 'on'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.plant_dehumidifier
  mode: single
- id: 058780e6e40d4e8c8ed1d4d32bec6417
  alias: Plant Dehumidifier OFF
  description: 'Turn OFF Dehumidifier if humidity lower than set limit.

    One unit of hysteresis added.'
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.plants_humidity'') | float(default=40) <  states(''input_number.max_humidity'')
      | float - 1.0 }}

      '
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.plant_dehumidifier
  initial_state: true
  mode: single
- id: '1614992678575'
  alias: Back Door Unlock
  description: My comment
  trigger:
  - platform: event
    event_type: zwave_js_notification
    context: {}
    event_data:
      device_id: ca0ce3f263ada0b01763c19fe3a0e2a6
      event_label: Manual unlock operation
  condition: []
  action:
  - service: input_text.set_value
    data:
      value: Manual Unlock
    target:
      entity_id: input_text.lock_last_action
  mode: single
- id: '1615013859642'
  alias: Back Door Lock
  description: ''
  trigger:
  - platform: event
    event_type: zwave_js_notification
    event_data:
      device_id: ca0ce3f263ada0b01763c19fe3a0e2a6
      event_label: Manual lock operation
  condition: []
  action:
  - service: input_text.set_value
    data:
      value: Manual Lock
    target:
      entity_id: input_text.lock_last_action
  mode: single
- id: '1615015361219'
  alias: Back Door User Unlock
  description: Unlocked by a user
  trigger:
  - platform: event
    event_type: zwave_js_notification
    event_data:
      device_id: ca0ce3f263ada0b01763c19fe3a0e2a6
      event_label: Keypad unlock operation
  condition: []
  action:
  - service: input_text.set_value
    data:
      value: '{% set mapper = {   0:''Master'',   1:''Graham'',   2:''Joyce'',   3:''Oliver'',   4:''Stuart'',   5:''User5''}
        %} {% set selection = trigger.event.data.parameters["userId"] %} {{ ''Unlocked
        by '' + mapper[selection] if selection in mapper else ''error'' }}'
    target:
      entity_id: input_text.lock_last_action
  - service: notify.mobile_app_grahams_iphone
    data:
      message: Back Door Unlocked
  mode: single
- id: '1615053483437'
  alias: Back Door User Lock
  description: Locked by a user
  trigger:
  - platform: event
    event_type: zwave_js_notification
    event_data:
      device_id: ca0ce3f263ada0b01763c19fe3a0e2a6
      event_label: Keypad lock operation
  condition: []
  action:
  - service: input_text.set_value
    data:
      value: '{% set mapper = {   0:''Master'',   1:''Graham'',   2:''Joyce'',   3:''Oliver'',   4:''Stuart'',   5:''User5''}
        %} {% set selection = trigger.event.data.parameters["userId"] %} {{  ''Locked
        by '' + mapper[selection] if selection in mapper else ''Locked by Keypad''
        }}'
    target:
      entity_id: input_text.lock_last_action
  mode: single
- id: '1615159546954'
  alias: Plant Automation Master ON
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.plant_automation
    to: 'on'
  condition: []
  action:
  - service: homeassistant.turn_on
    target:
      entity_id:
      - automation.plant_light_on
      - automation.plant_fan_on
      - climate.soil_heater
      - automation.plant_fan_off
      - automation.plant_light_off
  mode: single
- id: '1615160881960'
  alias: Plant Automation Master OFF
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.plant_automation
    to: 'off'
  condition: []
  action:
  - service: homeassistant.turn_off
    target:
      entity_id:
      - automation.plant_light_on
      - automation.plant_fan_on
      - climate.soil_heater
      - automation.plant_fan_off
      - automation.plant_light_off
      - switch.plant_dehumidifier
      - switch.plant_heater
      - switch.plant_light
  mode: single
- id: '1615165150474'
  alias: Plant Heater Restart
  description: Turn off climate control for soil heater if plant automation is off
  trigger:
  - platform: homeassistant
    event: start
  condition:
  - condition: state
    entity_id: input_boolean.plant_automation
    state: 'off'
  action:
  - service: climate.turn_off
    target:
      entity_id: climate.soil_heater
  mode: single
- id: '1615335699222'
  alias: Plant Light ON
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: state
    entity_id: input_boolean.plant_automation
    state: 'on'
  - condition: template
    value_template: '{{(now().hour * 60 + now().minute) * 60  > state_attr(''input_datetime.plant_light_on_time'',''timestamp'')
      and (now().hour * 60 + now().minute) * 60  < state_attr(''input_datetime.plant_light_off_time'',''timestamp'')  }}'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.plant_light
  mode: single
- id: '1615336696078'
  alias: Plant Light OFF
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: state
    entity_id: input_boolean.plant_automation
    state: 'on'
  - condition: template
    value_template: '{{(now().hour * 60 + now().minute) * 60  < state_attr(''input_datetime.plant_light_on_time'',''timestamp'')
      or (now().hour * 60 + now().minute) * 60  > state_attr(''input_datetime.plant_light_off_time'',''timestamp'')  }}'
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.plant_light
  mode: single
- id: '1615511989760'
  alias: GE Dimmer Polling
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /30
  condition: []
  action:
  - service: zwave_js.refresh_value
    data:
      entity_id: light.ge_12724_3way_dimmer_switch_level
  mode: single
- id: '1621568021535'
  alias: AC Away Slider Changed
  description: When AC Away slider changes, change cooling set point.
  trigger:
  - platform: state
    entity_id: input_number.slider_ac_away
  condition:
  - condition: state
    entity_id: binary_sensor.away
    state: 'on'
  action:
  - service: climate.set_temperature
    data:
      entity_id: climate.mitsubishi_heatpump
      temperature: '{{ states(''input_number.slider_ac_away'')}}'
  mode: single
  initial_state: true
- id: '1621568141969'
  alias: AC Home Slider Changed
  description: When AC Home slider changes, change cooling set point if home.
  trigger:
  - platform: state
    entity_id: input_number.slider_ac_home
  condition:
  - condition: state
    entity_id: binary_sensor.away
    state: 'off'
  action:
  - service: climate.set_temperature
    data:
      entity_id: climate.mitsubishi_heatpump
      temperature: '{{ states(''input_number.slider_ac_home'')}}'
  mode: single
  initial_state: true
- id: '1628201940502'
  alias: UPS On Line
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.myups_status
    for:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
    to: Online
  condition: []
  action:
  - service: notify.mobile_app_grahams_iphone
    data:
      message: UPS now ON Line Battery Fully Changed
  mode: single
- id: '1628202005900'
  alias: UPS On Battery
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.myups_status
    to: On Battery Battery Discharging
    for: 00:01:00
  condition: []
  action:
  - service: notify.mobile_app_grahams_iphone
    data:
      message: UPS now ON Battery
  mode: single
- id: '1628219707084'
  alias: UPS On Line Battery Charging
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.myups_status
    for: 00:01:00
    to: Online Battery Charging
  condition: []
  action:
  - service: notify.mobile_app_grahams_iphone
    data:
      message: UPS now ON Line Battery Charging
  mode: single
- id: '1636156308812'
  alias: Air Filter Accumulator
  description: Accumulate how many minutes the HEPA Filter is ON to determine when
    the air filter needs replacing. (150,000 minutes)  Scale to a minute at highspeed
    or 72% duty cycle. Scale to hours.
  trigger:
  - platform: time_pattern
    minutes: /1
  condition:
  - condition: state
    entity_id: fan.hepa_filter_fan
    state: 'on'
  action:
  - service: input_number.set_value
    target:
      entity_id: input_number.hepa_hours
    data:
      value: '{{ states(''input_number.hepa_hours'') | float + state_attr(''fan.hepa_filter_fan'',''percentage''
        ) | float / 4320 }}'
  mode: single
  initial_state: true
- id: '1636156585964'
  alias: Notify HEPA Filter
  description: Send Notification if HEPA Filter used for more than 2500 hours.
  trigger:
  - platform: template
    value_template: '{{ states(''input_number.hepa_hours'') | float > 2500.0 }}'
  condition: []
  action:
  - service: notify.mobile_app_grahams_iphone
    data:
      message: HEPA Filter Used for 2,500 hours.
  mode: single
  initial_state: true
- id: '1637003740722'
  alias: Air Filter
  description: Turn fan ON for 1 hour if Heat Pump is heating or cooling, furnace
    is heating.  Conditions prevent this when away or when sleeping.
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: state
    entity_id: binary_sensor.away
    state: 'off'
  - condition: time
    after: 06:00
    before: '23:00'
  - condition: or
    conditions:
    - condition: state
      entity_id: climate.mitsubishi_heatpump
      state: heating
      attribute: hvac_action
    - condition: state
      entity_id: climate.mitsubishi_heatpump
      state: cooling
      attribute: hvac_action
    - condition: state
      entity_id: climate.house
      state: heating
      attribute: hvac_action
  action:
  - service: fan.turn_on
    data: {}
    target:
      entity_id: fan.hepa_filter_fan
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: fan.turn_off
    target:
      entity_id: fan.hepa_filter_fan
  mode: restart
- id: '1679763471320'
  alias: HVAC2
  description: Triggers a script every minute to determine heatpump and furnace operating
    modes.  Condition 1 is when away - cool around ac_away setpoint Condition 2 is
    when not away and sleeping (furnace setpoint is away setpoint) - cool around ac_home
    setpoint Condition 2 is when not away - cool around ac_home setpoint, heat around
    the home setpoint with heatpump. use the furnance to bring house temperature in
    range of heatpump.
  trigger:
  - platform: time_pattern
    minutes: /1
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.away
        state: 'on'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat
        target:
          entity_id: climate.house
      - service: script.hvac_away
        data:
          cool_setpoint: '{{states(''input_number.slider_ac_away'')}}'
          temperature: '{{states(''sensor.house_temperature'')}}'
    - conditions:
      - condition: state
        entity_id: binary_sensor.away
        state: 'off'
      - condition: template
        value_template: '{{is_state_attr(''climate.house'', ''temperature'', states(''input_number.slider_away'')|float)}}'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat
        target:
          entity_id: climate.house
      - service: script.hvac_away
        data:
          cool_setpoint: '{{states(''input_number.slider_ac_home'')}}'
          temperature: '{{states(''sensor.house_temperature'')}}'
    - conditions:
      - condition: state
        entity_id: binary_sensor.away
        state: 'off'
      sequence:
      - service: script.hvac_home
        data:
          cool_setpoint: '{{states(''input_number.slider_ac_home'')}}'
          heat_setpoint: '{{states(''input_number.slider_home'')}}'
          temperature: '{{states(''sensor.house_temperature'')}}'
  mode: single
- id: '1680562086422'
  alias: Irrigation Multiplier
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.average_outdoor_temperature
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: state
    entity_id:
    - input_number.irrigation_gain
  - platform: state
    entity_id:
    - input_number.irrigation_nom_temperature
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.enable_irrigation_multiplier
    state: 'on'
  action:
  - service: input_number.set_value
    data:
      entity_id: input_number.irrigation_multiplier
      value: '{{ states(''sensor.average_outdoor_temperature'') | float / states(''input_number.irrigation_nom_temperature'')
        | float * states(''input_number.irrigation_gain'') | float}}'
  mode: single
- id: '1680563383342'
  alias: Advanced Irrigation
  description: ''
  trigger:
  - platform: time
    at: input_datetime.irrigation_am_time
  - platform: time
    at: input_datetime.irrigation_pm_time
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ states(''sensor.vancouver_precipitation_yesterday'') | float
        < 5 }}'
  action:
  - service: script.turn_on
    data: {}
    target:
      entity_id: script.advanced_irrigate_front
  - wait_template: '{{is_state(''script.advanced_irrigate_front'', ''off'')}}'
    continue_on_timeout: false
  - service: script.turn_on
    data: {}
    target:
      entity_id: script.advanced_irrigate_back
  - wait_template: '{{is_state(''script.advanced_irrigate_back'', ''off'')}}'
    continue_on_timeout: false
  - service: script.turn_on
    data: {}
    target:
      entity_id: script.advanced_irrigate_deck
  - wait_template: '{{is_state(''script.advanced_irrigate_deck'', ''off'')}}'
    continue_on_timeout: false
  - service: input_datetime.set_datetime
    target:
      entity_id: input_datetime.irrigation_am_stop_time
    data:
      datetime: '{{ strptime(states(''input_datetime.irrigation_am_time''), ''%H:%M:%S'')
        + timedelta(hours=1) }}'
  - service: input_datetime.set_datetime
    target:
      entity_id: input_datetime.irrigation_pm_stop_time
    data:
      datetime: '{{ strptime(states(''input_datetime.irrigation_pm_time''), ''%H:%M:%S'')
        + timedelta(hours=1) }}'
  mode: single
- id: '1681317300903'
  alias: Daily Energy
  description: Hydro
  trigger:
  - platform: time_pattern
    hours: '0'
    minutes: '1'
  condition: []
  action:
  - service: input_number.set_value
    data:
      entity_id: input_number.hydro_daily_energy
      value: '{{ states(''sensor.eagle_200_total_meter_energy_delivered'') | float
        -  states(''input_number.hydro_meter_last_day'') | float | round(1) }}'
  - service: input_number.set_value
    data:
      entity_id: input_number.hydro_meter_last_day
      value: '{{ states(''sensor.eagle_200_total_meter_energy_delivered'') | float
        }}'
  mode: single
  initial_state: true
