homeassistant:
  # Name of the location where Home Assistant is running
  name: !secret name
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret elevation
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: !secret time_zone
  customize: !include customize.yaml

#Show links to resources in log and frontend
#introduction:
system_health:
#Uncomment to use ui-lovelace.yaml instead of UI
# lovelace:
  # mode: yaml

http:
  # Comment out next three lines to use NGINX
  # ssl_certificate: /ssl/fullchain.pem
  # ssl_key: /ssl/privkey.pem
  # ssl_profile: intermediate
  base_url: !secret base_url
  # ip_ban_enabled: true
  # login_attempts_threshold: 5
  
mysensors:
  gateways:
    - device: mqtt
      persistence_file: '/config/mysensors1.json'
      topic_in_prefix: 'mygateway1-out'
      topic_out_prefix: 'mygateway1-in'
  optimistic: false
  persistence: true
  retain: true
  version: '2.0'

zwave:
  usb_path: /dev/ttyACM0
  network_key: !secret zwave_key
  polling_interval: 30000
  device_config:
    light.ge_12724_3way_dimmer_switch_level: # Added to keep HA in sync after manual override
      refresh_value: true #refresh the brightness value if the dimmer do "soft off"
      delay: 2 #Amount of seconds before the refresh is done after the actual action.
      polling_intensity: 1 #Polls the device when each (polling_intensity) polling is performed by polling_interval

# Enables the frontend
frontend:
  #javascript_version: es5

# Enables configuration UI
config:

# Checks for available updates
updater:

#Replace discovery with hassio
hassio:
# Discover some devices automatically
# discovery:
  # ignore:
    # - apple_tv

python_script:

#Need this only to debug python scripts
# logger:
  # default: info
  # logs:
    # homeassistant.components.python_scripts: debug
    # homeassistant.components.sensor.time: error
    
# #For Mysensors debug only
# logger:
  # default: info
  # logs:
    # homeassistant.components.mysensors: debug
    # mysensors: debug
    
#Enable IOS App, Home Assistant Companion
mobile_app:

# Keep database from growing too large by purging
# No need to record some entities
# Must log automations to restore_state of automations on restart
recorder:
  purge_interval: 1
  purge_keep_days: 10
  exclude:
    entities:
      - switch.watchdog
      - sensor.time
      - sensor.rgb_state
      - sun.sun
      - switch.heat0
      - switch.heat1
      - sensor.grahams_iphone_battery_level
      - sensor.grahams_iphone_battery_state
      - sensor.joyce_ipad_battery_level
      - sensor.joyce_ipad_battery_state
      - device_tracker.grahams_iphone
      - device_tracker.joyce_ipad
      - sensor.lr_random
      - sensor.br_random
      ## Several accumulators for which only the last value is required.
      - sensor.energy_accum
      - sensor.last_power
      - sensor.temp_diff_accum
      ## No need to see history after debug
      - sensor.temp_diff
      - counter.fan_on_minutes
      # environment canada sensors
      - sensor.temperature_2
      - sensor.forecast
      - sensor.chance_of_precip
      - sensor.dewpoint
      - sensor.wind_chill
      - sensor.humidex
      - sensor.pressure
      - sensor.tendency
      - sensor.visibility
      # - sensor.humidity_2
      - sensor.condition
      - sensor.wind_speed
      - sensor.wind_gust
      - sensor.wind_direction
      - sensor.wind_bearing
      - sensor.high_temperature
      - sensor.low_temperature
      - sensor.uv_index
      - sensor.pop
      - sensor.text_summary
      - sensor.warnings
      - sensor.watches
      - sensor.advisories
      - sensor.statements
      - sensor.endings
      
      
    domains:
      - zwave
    ## Recommended to reduce database activity  
    event_types:
      - service_removed
      - service_executed
      - platform_discovered
      - homeassistant_start
      - homeassistant_stop      
      - feedreader
      - service_registered
      - call_service
      - component_loaded
      - logbook_entry
      - system_log_event
      - automation_triggered
      - script_started
      - timer_out_of_sync

# View only some events in logbook
# Depends on recorder settings.
logbook:
  include:
    entities:
      - climate.summer_fan
      - light.ge_12724_3way_dimmer_switch_level
      - lock.schlage_be469nxcen_touchscreen_deadbolt_locked
      - sensor.heat_state
      - sensor.back_lock_last_action
      - sensor.flood
      - switch.away
      - switch.back_irrigation
      - switch.deck_irrigation
      - switch.front_irrigation
      - switch.leviton_dz15s_1bz_decora_smart_switch_switch
      - switch.leviton_dzr151lz_binary_scene_switch_switch
      - sensor.medalert1_check


# View the history of only some components
# Depends on recorder settings.
history:
  exclude:
    domains:
      - automation
      - script
      - group
      - zwave
    entities:
      - binary_sensor.away
      - counter.fan_on_minutes
      - device_tracker.grahams_iphone
      - device_tracker.joyce_ipad
      - history_graph.rain_fall
      - input_boolean.fan_reset
      - input_boolean.vacation
      - input_boolean.watchdog
      - input_number.slider_home
      - input_number.slider_away
      - input_number.slider_delay_f
      - input_number.slider_delay_b
      - input_number.slider_delay_d
      - input_number.slider_power
      - input_number.slider_ac_home
      - input_number.slider_ac_away
      - input_number.power_test
      - input_datetime.lr_off_time
      - input_datetime.lr_off_time_random
      - input_datetime.br_on_time_random
      - input_datetime.br_off_time_random
      - input_datetime.heat_on_time
      - input_datetime.heat_off_time
      - lock.schlage_be469nxcen_touchscreen_deadbolt_locked
      - sensor.cooling
      - sensor.energy_accum
      - sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control
      - sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level
      - sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type
      - sensor.schlage_be469nxcen_touchscreen_deadbolt_burglar
      - sensor.schlage_be469nxcen_touchscreen_deadbolt_power_management
      - sensor.schlage_be469nxcen_touchscreen_deadbolt_sourcenodeid
      - sensor.schlage_be469nxcen_touchscreen_deadbolt_system
      - sensor.lock_battery
      - sensor.precipitation_yesterday
      - sensor.medalert1_check
      - sensor.temp_diff_accum
      - sensor.hour_diff
      - sensor.furnace_power
      - sensor.last_power
      - sensor.hourly_energy_accum
      - sensor.hourly_temp_diff_accum
      # environment canada sensors
      - sensor.temperature_2
      - sensor.forecast
      - sensor.chance_of_precip
      - sensor.dewpoint
      - sensor.wind_chill
      - sensor.humidex
      - sensor.pressure
      - sensor.tendency
      - sensor.visibility
      # - sensor.humidity_2
      - sensor.condition
      - sensor.wind_speed
      - sensor.wind_gust
      - sensor.wind_direction
      - sensor.wind_bearing
      - sensor.high_temperature
      - sensor.low_temperature
      - sensor.uv_index
      - sensor.pop
      - sensor.text_summary
      - sensor.warnings
      - sensor.watches
      - sensor.advisories
      - sensor.statements
      - sensor.endings
      - updater.updater

#Send notifications to the iOS app on my iPhone
ios:

# Track the sun
sun:

# Keep alive repeats furnace ON or OFF message every 3 minutes
# Furnace Arduino will expect repeated furnace ON messages to keep the furnace relay ON.

climate:
  - platform: generic_thermostat
    name: House
    heater: switch.furnace
    target_sensor: sensor.temperature
    min_temp: 15
    max_temp: 25
    target_temp: !secret temperature_home
    cold_tolerance: 0.3
    hot_tolerance: 0.3
    min_cycle_duration:
      seconds: 10
    keep_alive:
      minutes: 3
    initial_hvac_mode: "heat"

  - platform: generic_thermostat
    name: Summer Fan
    heater: switch.fan
    target_sensor: sensor.temperature
    min_temp: 22
    max_temp: 35
    target_temp: !secret temperature_fan
    cold_tolerance: 0.3
    hot_tolerance: 0.3
    min_cycle_duration:
      seconds: 10
    ac_mode: true
    initial_hvac_mode: "cool"
    
  - platform: mqtt
    name: "Mitsubishi Heatpump"
    # Mode Definitions
    modes:
      - "off"
      - heat
      - dry
      - cool
      - fan_only
      - auto
    fan_modes:
      - AUTO
      - QUIET
      - "1"
      - "2"
      - "3"
      - "4"
    swing_modes:
      - AUTO
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"
      - SWING
    # MQTT Status Topic Processing
    current_temperature_topic: "heatpump/status"
    current_temperature_template: "{{ value_json.roomTemperature }}"
    mode_state_topic: "heatpump"
    mode_state_template: >
      {% if value_json.power == "OFF" %}
        off
      {% elif value_json.mode == "FAN" %}
        fan_only
      {% else %}
        {{ value_json.mode|lower }}
      {% endif %}
    temperature_state_topic: "heatpump"
    temperature_state_template: "{{ value_json.temperature }}"
    fan_mode_state_topic: "heatpump"
    fan_mode_state_template: "{{ value_json.fan }}"
    swing_mode_state_topic: "heatpump"
    swing_mode_state_template: "{{ value_json.vane }}"    
    action_topic: "heatpump"
    action_template: >
      {% if value_json.power == "ON" %}
        cooling
      {% else %}
        idle
      {% endif %}
    # MQTT Command Topics
    # Additional automation is required to process HQTT HVAC topics into a single set topic
    # with a json payload.
    mode_command_topic: "heatpump/_set/mode"
    temperature_command_topic: "heatpump/_set/temperature"
    fan_mode_command_topic: "heatpump/_set/fan"
    swing_mode_command_topic: "heatpump/_set/vane"
    
# Used in automations to detect when I leave and come home again.  'on' = away
# Add special condition for Oliver since he sometimes locks using a key code
binary_sensor:
  - platform: template
    sensors:
      away:
        value_template: >
          {{ is_state("sensor.back_lock_last_action", "Locked: Outside Keypad")
          or is_state("sensor.back_lock_last_action", "Locked: Oliver")}}
        friendly_name: 'I am away'
#Uptime robot monitor  (Too many log file entres when connection with uptime server fails
  # - platform: uptimerobot
    # api_key: !secret api_uptime

counter:
  fan_on_minutes:
    icon: mdi:fan

input_boolean:
  vacation:
    name: "ON Vacation"
    icon: mdi:car

  watchdog:
    name: "Watchdog Alarm Override"
    initial: off
    icon: mdi:lock
    
  fan_reset:
    name: Fan on counter reset
    initial: off
    icon: mdi:numeric-0-box

input_number:
  slider_home:
    name: Home
    #initial: 21
    min: 18
    max: 25
    step: 0.5
    icon: mdi:target
  slider_away:
    name: Away
    #initial: 18
    min: 16
    max: 20
    step: 0.5
    icon: mdi:target
  slider_delay_f:
    name: Front Duration
    min: 5
    max: 29
    step: 1.0
    icon: mdi:target
  slider_delay_b:
    name: Back Duration
    min: 5
    max: 29
    step: 1.0
    icon: mdi:target
  slider_delay_d:
    name: Deck Duration
    min: 5
    max: 29
    step: 1.0
    icon: mdi:target
  slider_power:
    name: Slider Power
    initial: 0
    min: 0
    max: 50
    step: 1
  slider_ac_home:
    name: AC Home
    #initial: 21
    min: 20
    max: 25
    step: 0.5
    icon: mdi:target
  slider_ac_away:
    name: AC Away
    #initial: 18
    min: 20
    max: 30
    step: 0.5
    icon: mdi:target    
 
# Used to generate at test pattern to power
  # power_test:
    # name: Power Test
    # initial: 0
    # min: 0
    # max: 50
    # step: 1    

input_datetime:
  lr_off_time:
    name: Living Room Light OFF
    has_date: false
    has_time: true

  lr_off_time_random:
    name: Living Room Light Random OFF
    has_date: false
    has_time: true

  br_on_time_random:
    name: Bed Room Light Random ON
    has_date: false
    has_time: true

  br_off_time_random:
    name: Bed Room Light Random OFF
    has_date: false
    has_time: true
    
  heat_on_time:
    name: Heat ON time
    has_date: false
    has_time: true

  heat_off_time:
    name: Heat OFF time
    has_date: false
    has_time: true

# Replaced by Python energy.py script    
# utility_meter:
  # furnace_hourly:
    # source: sensor.sensor_furnace_power_integral
    # cycle: hourly
  # furnace_daily:
    # source: sensor.sensor_furnace_power_integral
    # cycle: daily
    
notify:
  - platform: file
    name: energy_notify
    filename: hourly_energy.csv
    timestamp: true


# Now done using LoveLace Editor
# history_graph:
  # gr1:
    # name: Rain Fall
    # entities:
      # - sensor.yesterday_rainfall
    # hours_to_show: 168
    # refresh: 0
  # gr2:
    # name: House Energy Use
    # entities:
      # - sensor.temp_diff
      # - sensor.furnace_energy
    # hours_to_show: 168
    # refresh: 0

#This worked with a Google Home Mini to control all switches and light using a voice command
#Joyce considered this an invasion of privacy so I had to disconnect the service.
#I changed the HA password after disconnection.
# google_assistant:
  # project_id: graham-bb666
  # client_id: WRWcrvxwzflm4cihLtNGM29XvUfNNuz4Xr2fbdgRMa0vBoUoGAZrnYEKwByuYBQMpaQ7E4OSTJw8pE1e
  # access_token: JdC6XKyrVDi7tLCTmY1WDvmgs59o5cScdKk7oMu5j1QIED6mHxrDRKY978h26qqsgnOGKjACCQruEhEc
  # agent_user_id: gb53smith@gmail.com
  # api_key: AIzaSyAWxbX5diYHEskrc3pHEcNR-DH0UVocRNk
  # exposed_domains:
    # - switch
    # - light

# Include other files to better organize code
group: !include groups.yaml
automation pre45: !include automations.yaml
sensor: !include sensors.yaml
switch: !include switches.yaml
script: !include scripts.yaml
