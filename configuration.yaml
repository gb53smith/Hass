homeassistant:
  # Name of the location where Home Assistant is running
  name: !secret name
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret elevation
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: !secret time_zone
  customize: !include customize.yaml

#Show links to resources in log and frontend
#introduction:

http:
  api_password: !secret api_password
#This works for https://gb53smith.duckdns.org from an external network
#but not from my internal network.  Will work on chrome
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem
  base_url: gb53smith.duckdns.org:8123

#This start the MQTT server on Raspberry setup using the HA install script
#To access from an Arduino device I had to use the IP address for the Raspberry
mqtt:
  broker: localhost
  port: 1883
  client_id: home-assistant-1
  keepalive: 60
  username: !secret mos_id
  password: !secret mos_password
  protocol: 3.1

zwave:
  usb_path: /dev/ttyACM0
  network_key: !secret zwave_key
  polling_interval: 30000
  device_config:
    light.ge_12724_3way_dimmer_switch_level: # Added to keep HA in sync after manual override
      refresh_value: true #refresh the brightness value if the dimmer do "soft off"
      delay: 2 #Amount of seconds before the refresh is done after the actual action.
      polling_intensity: 1 #Polls the device when each (polling_intensity) polling is performed by polling_interval

# Enables the frontend
frontend:
  javascript_version: es5

# Enables configuration UI
config:

# Checks for available updates
updater:

# Discover some devices automatically
discovery:
  ignore:
    - apple_tv

python_script:

#Need this only to debug python scripts
# logger:
  # default: info
  # logs:
    # homeassistant.components.python_scripts: debug
    # homeassistant.components.sensor.time: error


# Keep database from growing too large by purging
# No need to record some entities
# Must log automations to restore_state of automations on restart
recorder:
  purge_interval: 5
  purge_keep_days: 7
  exclude:
    entities:
      - switch.watchdog
      - sensor.time
      - sensor.rgb_state
      - sun.sun
      - switch.heat0
      - switch.heat1
      - sensor.grahams_iphone_battery_level
      - sensor.grahams_iphone_battery_state
      - sensor.joyce_ipad_battery_level
      - sensor.joyce_ipad_battery_state
      - device_tracker.grahams_iphone
      - sensor.lr_random
      - sensor.br_random

# View only some events in logbook
# Depends on recorder settings.
logbook:
  include:
    entities:
      - climate.summer_fan
      - light.ge_12724_3way_dimmer_switch_level
      - lock.schlage_be469nxcen_touchscreen_deadbolt_locked
      - sensor.heat_state
      - sensor.back_lock_last_action
      - sensor.flood
      - switch.away
      - switch.back_irrigation
      - switch.deck_irrigation
      - switch.front_irrigation
      - switch.leviton_dz15s_light_switch_switch
      - switch.leviton_dzr151lz_binary_scene_switch_switch

# View the history of only some components
# Depends on recorder settings.
history:
  exclude:
    domains:
      - automation
      - script
      - group
      - zwave
    entities:
      - binary_sensor.away
      - input_boolean.vacation
      - input_boolean.watchdog
      - input_number.slider_home
      - input_number.slider_away
      - input_datetime.lr_off_time
      - input_datetime.lr_off_time_random
      - input_datetime.br_on_time_random
      - input_datetime.br_off_time_random
      - input_datetime.heat_on_time
      - input_datetime.heat_off_time
      - lock.schlage_be469nxcen_touchscreen_deadbolt_locked
      - sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control
      - sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level
      - sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type
      - sensor.schlage_be469nxcen_touchscreen_deadbolt_burglar
      - sensor.schlage_be469nxcen_touchscreen_deadbolt_power_management
      - sensor.schlage_be469nxcen_touchscreen_deadbolt_sourcenodeid
      - sensor.schlage_be469nxcen_touchscreen_deadbolt_system
      - sensor.lock_battery
      - sensor.yesterday_rainfall
      - sensor.processor_use
      - sensor.cpu_temperature
      - updater.updater

#Send notifications to the iOS app on my iPhone
ios:

# Track the sun
sun:

# Keep alive repeats furnace ON or OFF message every 3 minutes
# Furnace Arduino will expect repeated furnace ON messages to keep the furnace relay ON.

climate:
  - platform: generic_thermostat
    name: House
    heater: switch.furnace
    target_sensor: sensor.temperature
    min_temp: 15
    max_temp: 25
    target_temp: !secret temperature_home
    cold_tolerance: 0.3
    hot_tolerance: 0.3
    min_cycle_duration:
      seconds: 10
    keep_alive:
      minutes: 3

  - platform: generic_thermostat
    name: Summer Fan
    heater: switch.fan
    target_sensor: sensor.temperature
    min_temp: 22
    max_temp: 35
    target_temp: !secret temperature_fan
    cold_tolerance: 0.3
    hot_tolerance: 0.3
    min_cycle_duration:
      seconds: 10
    ac_mode: true

# Used in automations to detect when I leave and come home again.  'on' = away
# Add special condition for Oliver since he sometimes locks using a key code
binary_sensor:
  - platform: template
    sensors:
      away:
        value_template: >
          {{ is_state("sensor.back_lock_last_action", "Locked: Outside Keypad")
          or is_state("sensor.back_lock_last_action", "Locked: Oliver")}}
        friendly_name: 'I am away'

input_boolean:
  vacation:
    name: "ON Vacation"
    icon: mdi:car

  watchdog:
    name: "Watchdog Alarm Override"
    initial: off
    icon: mdi:lock

input_number:
  slider_home:
    name: Home Temp
    #initial: 21
    min: 18
    max: 25
    step: 0.5
    icon: mdi:target
  slider_away:
    name: Away Temp
    #initial: 18
    min: 16
    max: 20
    step: 0.5
    icon: mdi:target

input_datetime:
  lr_off_time:
    name: Living Room Light OFF
    has_date: false
    has_time: true

  lr_off_time_random:
    name: Living Room Light Random OFF
    has_date: false
    has_time: true

  br_on_time_random:
    name: Bed Room Light Random ON
    has_date: false
    has_time: true

  br_off_time_random:
    name: Bed Room Light Random OFF
    has_date: false
    has_time: true
    
  heat_on_time:
    name: Heat ON time
    has_date: false
    has_time: true

  heat_off_time:
    name: Heat OFF time
    has_date: false
    has_time: true    

# history_graph:
  # gr1:
    # name: House Climate
    # entities:
      # - switch.away
      # - sensor.heat_state
      # - switch.furnace
      # - sensor.temperature
      # - sensor.temperature_setpoint
    # hours_to_show: 24
    # refresh: 60

#This worked with a Google Home Mini to control all switches and light using a voice command
#Joyce considered this an invasion of privacy so I had to disconnect the service.
#I changed the HA password after disconnection.
# google_assistant:
  # project_id: graham-bb666
  # client_id: WRWcrvxwzflm4cihLtNGM29XvUfNNuz4Xr2fbdgRMa0vBoUoGAZrnYEKwByuYBQMpaQ7E4OSTJw8pE1e
  # access_token: JdC6XKyrVDi7tLCTmY1WDvmgs59o5cScdKk7oMu5j1QIED6mHxrDRKY978h26qqsgnOGKjACCQruEhEc
  # agent_user_id: gb53smith@gmail.com
  # api_key: AIzaSyAWxbX5diYHEskrc3pHEcNR-DH0UVocRNk
  # exposed_domains:
    # - switch
    # - light

# Include other files to better organize code
group: !include groups.yaml
automation pre45: !include automations.yaml
sensor: !include sensors.yaml
switch: !include switches.yaml
script: !include scripts.yaml
