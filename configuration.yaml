homeassistant:
  customize: !include customize.yaml

#Running NGINX on another PI 4 so I can share my IP address with PrivateBook
http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 192.168.1.90

#Show links to resources in log and frontend
#introduction:
system_health:
esphome:
# api:
  # password: !secret ota_password
zeroconf:

# See Helpers in UI
input_text:

# Enables the frontend
frontend:
  #javascript_version: es5

# Enables configuration UI
config:

# Checks for available updates
updater:

#Replace discovery with hassio
hassio:
# Discover some devices automatically
discovery:
  ignore:
    - apple_tv

python_script:

#This set the severity of notices in the log file
#Can be set to "info" for more detail or "debug" for certain components
logger:
  default: warning
  # Ignore rainforest errors and warnings as it reboots daily.
  logs:
    homeassistant.components.rainforest_eagle.data: critical
  # logs:
    # homeassistant.components.python_scripts: debug
    # homeassistant.components.sensor.time: error

# #For Mysensors debug only
# logger:
  # default: info
  # logs:
    # homeassistant.components.mysensors: debug
    # mysensors: debug

#Enable IOS App, Home Assistant Companion
mobile_app:

# Send SMS if burglar alarm triggered
twilio:
  account_sid: !secret account_sid
  auth_token: !secret auth_token

notify:
  - name: Burglar Alarm SMS
    platform: twilio_sms
    from_number: !secret from_number
  - name: energy_notify
    platform: file
    filename: hourly_energy.csv
    timestamp: true

# Keep database from growing too large by purging
# No need to record some entities
# Must log automations to restore_state of automations on restart
recorder:
  auto_purge: true
  purge_keep_days: 10
  exclude:
    entities:
      - sensor.time
      - sensor.rgb_state
      - sun.sun
      - input_boolean.heat0
      - input_boolean.heat1
      - device_tracker.joyce_ipad2
      - device_tracker.iphone
      - sensor.lr_random
      - sensor.br_random
      ## Several accumulators for which only the last value is required.
      #- input_number.energy_accum
      - input_number.hourly_energy_accum
      #- input_number.last_power
      - input_number.temp_diff_accum
      - input_number.hourly_temp_diff_accum
      - input_number.last_house_temp
      - input_number.last_house_humidity
      - input_number.last_gas
      ## calibration settings
      - input_number.soil_dry_1
      - input_number.soil_wet_1
      - input_number.soil_dry_2
      - input_number.soil_wet_2
      ## plant fan limits
      - input_number.max_humidity
      - input_datetime.plant_light_off_time
      - input_datetime.plant_light_on_time
      ## No need to see history after debug
      - sensor.temp_diff
      - counter.fan_on_minutes
      - counter.brita_days
      - binary_sensor.updater
      ## These are copied to input numbers for linear spline smoothing
      - sensor.mysensors_bme280_2_1
      - sensor.mysensors_bme280_2_2
      - sensor.mysensors_bme280_2_3
      - sensor.soil_moisture_sensor_5_3
      # iPhone entities not used
      - sensor.iphone_battery_level
      - sensor.iphone_battery_state
      - sensor.iphone_bssid
      - sensor.iphone_connection_type
      - sensor.iphone_last_update_trigger
      - sensor.iphone_sim_1
      - sensor.iphone_ssid
      - sensor.iphone_storage
      # iPad entities not used
      - sensor.joyce_ipad2_battery_level
      - sensor.joyce_ipad2_battery_state
      - sensor.joyce_ipad2_bssid
      - sensor.joyce_ipad2_connection_type
      - sensor.joyce_ipad2_last_update_trigger
      - sensor.joyce_ipad2_ssid
      - sensor.joyce_ipad2_storage
      #- sensor.z_wave_motion_sensor_battery_level
      - input_boolean.plant_automation
      # UPS states not worth saving
      - sensor.myups_battery_runtime
      - sensor.myups_battery_voltage
      - sensor.myups_beeper_status
      - sensor.myups_input_voltage
      - sensor.myups_load
      #Energy Meter. Only need last value
      - sensor.eagle_200_total_meter_energy_delivered
      - sensor.eagle_200_net_meter_energy_delivered_minus_received
      - sensor.eagle_200_total_meter_energy_received
      - input_number.hydro_meter_last_hour
      - input_number.hydro_meter_last_day
      - input_number.hepa_hours

    domains:
      - zwave
      - device_tracker
      - automation
      - script
      - group

    ## Recommended to reduce database activity
    event_types:
      - service_removed
      - service_executed
      - platform_discovered
      - homeassistant_start
      - homeassistant_stop
      - feedreader
      - service_registered
      - call_service
      - component_loaded
      - logbook_entry
      - system_log_event
      - automation_triggered
      - script_started
      - timer_out_of_sync

# View only some events in logbook
# Depends on recorder settings.
logbook:
  include:
    entities:
      - climate.summer_fan
      - light.ge_12724_3way_dimmer_switch_level
      - lock.schlage_be469nxcen_touchscreen_deadbolt_locked
      - sensor.heat_state
      - sensor.flood
      - binary_sensor.away
      - switch.back_irrigation
      - switch.deck_irrigation
      - switch.front_irrigation
      - switch.scene_capable_push_on_off
      - switch.leviton_dzr151lz_binary_scene_switch_switch
      - sensor.wide_vane
      # Test only
      # - input_number.power_test
      # - input_number.energy_accum
      # - input_number.hourly_energy

# View the history of only some components
# Depends on recorder settings.
history:
  use_include_order: true
  include:
    entities:
      - sensor.date
      - lock.schlage_be469nxcen_touchscreen_deadbolt_locked
      - binary_sensor.away
      - binary_sensor.ecolink_motion_detector_sensor
      - switch.scene_capable_push_on_off
      - switch.back_irrigation
      - switch.deck_irrigation
      - switch.front_irrigation
      - switch.furnace
      - switch.fan
      - sensor.flood
      - sensor.house_temperature
      - input_number.temperature
      - sensor.eagle_200_meter_power_demand

# Track the sun
sun:

# Keep alive repeats furnace ON or OFF message every 3 minutes
# Furnace Arduino will expect repeated furnace ON messages to keep the furnace relay ON.

climate:
  - platform: generic_thermostat
    name: House
    heater: switch.furnace
    target_sensor: sensor.house_temperature
    min_temp: 15
    max_temp: 25
    precision: 0.1
    cold_tolerance: 0.3
    # Reduce overshoot on the hot side with MultiSensor2
    hot_tolerance: 0.1
    min_cycle_duration:
      seconds: 10
    keep_alive:
      minutes: 3
    initial_hvac_mode: "heat"

  - platform: generic_thermostat
    name: Summer Fan
    heater: switch.fan
    target_sensor: sensor.house_temperature
    min_temp: 22
    max_temp: 35
    precision: 0.1
    cold_tolerance: 0.3
    hot_tolerance: 0.3
    min_cycle_duration:
      seconds: 10
    ac_mode: true
    initial_hvac_mode: "cool"
    
  - platform: generic_thermostat
    name: Soil Heater
    heater: switch.plant_heater
    target_sensor: sensor.plants_soil_temperature
    min_temp: 10
    max_temp: 28
    precision: 0.1
    cold_tolerance: 0.3
    hot_tolerance: 0.1
    # Prevent heater stuck ON
    keep_alive:
      minutes: 5
    initial_hvac_mode: "heat"  

  - platform: mqtt
    name: "Mitsubishi Heatpump"
    # Mode Definitions
    modes:
      - "off"
      - heat
      - dry
      - cool
      - fan_only
      - auto
    fan_modes:
      - AUTO
      - QUIET
      - "1"
      - "2"
      - "3"
      - "4"
    swing_modes:
      - AUTO
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"
      - SWING
    # MQTT Status Topic Processing
    current_temperature_topic: "heatpump/status"
    current_temperature_template: "{{ value_json.roomTemperature }}"
    mode_state_topic: "heatpump"
    mode_state_template: >
      {% if value_json.power == "OFF" %}
        off
      {% elif value_json.mode == "FAN" %}
        fan_only
      {% else %}
        {{ value_json.mode|lower }}
      {% endif %}
    temperature_state_topic: "heatpump"
    temperature_state_template: "{{ value_json.temperature }}"
    fan_mode_state_topic: "heatpump"
    fan_mode_state_template: "{{ value_json.fan }}"
    swing_mode_state_topic: "heatpump"
    swing_mode_state_template: "{{ value_json.vane }}"
    action_topic: "heatpump"
    action_template: >
      {% if value_json.power == "OFF" %}
        off
      {% elif value_json.mode == "HEAT" %}
        heating
      {% elif value_json.mode == "COOL" %}
        cooling
      {% elif value_json.mode == "DRY" %}
        drying
      {% else %}
        {{ value_json.mode|lower }}
      {% endif %}
    # MQTT Command Topics
    # Additional automation is required to process HQTT HVAC topics into a single set topic
    # with a json payload.
    mode_command_topic: "heatpump/_set/mode"
    temperature_command_topic: "heatpump/_set/temperature"
    fan_mode_command_topic: "heatpump/_set/fan"
    swing_mode_command_topic: "heatpump/_set/vane"

# Used in automations to detect when I leave and come home again.  'on' = away
# Add special condition for Oliver since he sometimes locks using a key code
# Consolidates input_boolean.vacation to override when on vacation.
binary_sensor:
  - platform: template
    sensors:
      away:
        value_template: >
          {{ is_state("input_text.lock_last_action", "Locked by Keypad")
          or is_state("input_text.lock_last_action", "Locked by Oliver")
          or is_state("input_boolean.vacation", "on") }}
        friendly_name: "I am away"
# Monitor MultiSensor2 that measures house temperature.
  - platform: ping
    host: 192.168.1.75

counter:
  fan_on_minutes:
    icon: mdi:fan
  brita_days:
    icon: mdi:glass-water

input_boolean:
  vacation:
    name: "ON Vacation"
    icon: mdi:car

  heat0:
    name: "Heat State 0"
    initial: off

  heat1:
    name: "Heat State 1"
    initial: off
    
  plant_automation:
    name: "Plant Automation"
    icon: mdi:toggle-switch-outline

input_number:
  slider_home:
    name: Home
    #initial: 21
    min: 18
    max: 25
    step: 0.5
    icon: mdi:target
    mode: box
  slider_away:
    name: Away
    #initial: 18
    min: 16
    max: 20
    step: 0.5
    icon: mdi:target
    mode: box
  slider_delay_f:
    name: Front Duration
    min: 5
    max: 29
    step: 1.0
    icon: mdi:target
    mode: box
  slider_delay_b:
    name: Back Duration
    min: 5
    max: 29
    step: 1.0
    icon: mdi:target
    mode: box
  slider_delay_d:
    name: Deck Duration
    min: 5
    max: 29
    step: 1.0
    icon: mdi:target
    mode: box
  furnace_power:
    name: Furnace Power
    min: 0
    max: 50
    step: 0.1
    unit_of_measurement: "kW"
  slider_ac_home:
    name: AC Home
    #initial: 21
    min: 20
    max: 25
    step: 0.5
    icon: mdi:target
    mode: box
  slider_ac_away:
    name: AC Away
    #initial: 18
    min: 20
    max: 30
    step: 0.5
    icon: mdi:target
    mode: box
  box_gas:
    name: Base Gas Resistance
    min: 100
    max: 2000
    step: 10
    mode: box
  #stores the last power level when outside of current window.
  last_power:
    min: 0
    max: 100
    step: 0.1
    unit_of_measurement: "kW"
    mode: box
  # Accumulates temperature difference values over an hour.
  # Sum at end of hour is copied to sensor.hour_diff for graphing.
  temp_diff_accum:
    min: 0
    max: 1000
    step: 0.1
    mode: box
  # Accumulates hourly temperature difference values.
  # Sum at the end of the day is copied to sensor.daily_temp_diff for graphing.
  hourly_temp_diff_accum:
    min: 0
    max: 1000
    step: 0.1
    mode: box
  # Accumulates energy use over an hour.
  # Sum at end of hour is copied to sensor.hourly_energy for graphing.
  energy_accum:
    min: 0
    max: 1000
    step: 0.1
    mode: box
  # Accumulates hourly energy values.
  # Sum at the end of the day is copied to sensor.daily_energy for graphing.
  hourly_energy_accum:
    min: 0
    max: 1000
    step: 0.1
    mode: box
  # Save for sensor.house_temperature restore after HA restart
  last_house_temp:
    min: 0
    max: 100
    step: 0.1
    mode: box
  # Save last sensor.multisensor2_humidity for HA restart
  last_house_humidity:
    min: 0
    max: 100
    step: 1
    mode: box
  # Save last sensor.multisensor2_gasavg for HA restart
  last_gas:
    min: 0
    max: 5000
    step: 1
    mode: box
  # Used for outdoor temperature to smooth plotting
  temperature:
    min: -20
    max: 50
    step: 0.1
    mode: box
  pressure:
    min: 800
    max: 1200
    step: 0.1
    mode: box
  humidity:
    min: 0
    max: 100
    step: 1
    mode: box
  hour_diff:
    min: -20
    max: 100
    step: 0.1
    mode: box
  hourly_energy:
    min: 0
    max: 100
    step: 0.1
    mode: box
  daily_energy:
    min: 0
    max: 100
    step: 0.1
    mode: box
  daily_temp_diff:
    min: -20
    max: 100
    step: 0.1
    mode: box 
  soil_dry_1:
    min: 1000
    max: 4000
    step: 1
    mode: box
  soil_wet_1:
    min: 1000
    max: 4000
    step: 1
    mode: box
  soil_dry_2:
    min: 1000
    max: 4000
    step: 1
    mode: box
  soil_wet_2:
    min: 1000
    max: 4000
    step: 1
    mode: box
  max_humidity:
    min: 50
    max: 100
    step: 1
    mode: box  
  temperature_fan:
    name: Temperature Fan
    min: 20
    max: 35
    step: 1
    mode: box
  temperature_fan_away:
    name: Temperature Fan Away
    min: 20
    max: 35
    step: 1
    mode: box    
  # # Used to generate at test pattern to power
  # power_test:
    # name: Power Test
    # initial: 0
    # min: 0
    # max: 150
    # step: 1
    # unit_of_measurement: "kW"
  hydro_hourly_energy:
    min: 0
    max: 1000
    step: 0.1
    mode: box
  hydro_daily_energy:
    min: 0
    max: 1000
    step: 0.1
    mode: box
  hydro_meter_last_hour:
    min: 0
    max: 1000000
    step: 0.1
    mode: box
  hydro_meter_last_day:
    min: 0
    max: 1000000
    step: 0.1
    mode: box
  hepa_hours:
    min: 0
    max: 1000000
    step: 0.1
    mode: box

input_datetime:
  lr_off_time:
    name: Living Room Light OFF
    has_date: false
    has_time: true

  lr_off_time_random:
    name: Living Room Light Random OFF
    has_date: false
    has_time: true

  br_on_time_random:
    name: Bed Room Light Random ON
    has_date: false
    has_time: true

  br_off_time_random:
    name: Bed Room Light Random OFF
    has_date: false
    has_time: true

  heat_on_time:
    name: Heat ON time
    has_date: false
    has_time: true
    
  heatpump_on_time:
    name: Heatpump ON time
    has_date: false
    has_time: true

  heat_off_time:
    name: Heat OFF time
    has_date: false
    has_time: true

  plant_light_on_time:
    name: Plant Light ON time
    has_date: false
    has_time: true

  plant_light_off_time:
    name: Plant Light OFF time
    has_date: false
    has_time: true

# MultiSensor2 Support
# ms2 added to prevent possible conflict with Z-wave light.  It is needed.
light ms2:
  - platform: mqtt
    schema: json
    command_topic: "/home/ms2/l"
    state_topic: "/home/ms2/lc"
    rgb: true
    retain: true  
   
fan:
  - platform: mqtt
    name: "Wide Vane"
    icon: mdi:air-filter    
    command_topic: "heatpump/set"
    command_template:  '{ "power" : "{{ value }}" , "mode" : "FAN"}'
    state_topic: "heatpump"
    state_value_template:  "{{ value_json.power }}"
    preset_mode_command_topic: "heatpump/set"
    preset_mode_command_template: '{ "wideVane" : "{{ value }}" }'
    preset_mode_state_topic: "heatpump"
    preset_mode_value_template: "{{ value_json.wideVane }}"
    preset_modes: 
       -  "<<"
       -  "<"
       -  "|"
       -  ">"
       -  ">>"
       -  "SWING"

# Used to set wide vane position every time the heat pump is turned ON as it
# seems to revert to "<<" for no reason.
input_select:
  widevane:
    name: Wide Vane Setting
    options:
       -  "<<"
       -  "<"
       -  "|"
       -  ">"
       -  ">>"
       -  "SWING"
    icon: mdi:air-filter 

# Include other files to better organize code
group: !include groups.yaml
automation: !include automations.yaml
sensor: !include sensors.yaml
switch: !include switches.yaml
script: !include scripts.yaml
