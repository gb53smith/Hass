
# hassio 55 automatically renews certificates
#  - platform: command_line
#    name: SSL cert expiry
#    unit_of_measurement: days
#    scan_interval: 10800
#    command: "ssl-cert-check -b -c /etc/letsencrypt/live/gb53smith.duckdns.org/cert.pem | awk '{ print $NF }'"

  - platform: template
    sensors:
      back_lock_last_action:
        friendly_name: 'Lock Last Action'
        value_template: > 
                          {% if 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level', '1') 
                          and 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control', '6') 
                          and 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type', '19') %} 
                                  Unlocked: Graham
                          {% endif %}

                          {% if 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level', '2') 
                          and 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control', '6') 
                          and 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type', '19') %} 
                                  Unlocked: Joyce
                          {% endif %}

                          {% if 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level', '3') 
                          and 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control', '6') 
                          and 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type', '19') %} 
                                  Unlocked: Oliver
                          {% endif %}  
                          
                          {% if 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level', '1') 
                          and 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control', '2') 
                          and 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type', '22') %} 
                                  Unlocked: Inside Deadbolt
                          {% endif %}

                          {% if 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level', '1') 
                          and 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control', '1') 
                          and 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type', '21') %} 
                                  Locked: Inside Deadbolt
                          {% endif %}

                          {% if 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_level', '0') 
                          and 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_access_control', '5') 
                          and 
                            is_state('sensor.schlage_be469nxcen_touchscreen_deadbolt_alarm_type', '18') %}
                                  Locked: Outside Keypad
                          {% endif %}

# The "back_lock_last_action" state value "Locked: Outside Keypad" can be used to detect being away from the house.
                           
  - platform: template
    sensors:
      lock_battery:
        friendly_name: 'Lock Battery'
        value_template: "{{ states.zwave.schlage_be469nxcen_touchscreen_deadbolt.attributes.battery_level|default(-1)|int }}"
        unit_of_measurement: '%'
        entity_id: zwave.schlage_be469nxcen_touchscreen_deadbolt
        
  # - platform: template
    # sensors:
      # temperature_setpoint:
        # friendly_name: 'Set Point'
        # unit_of_measurement: '°C'
        # value_template: "{{ states.climate.house.attributes.temperature }}"
        # entity_id: climate.house
        
  - platform: command_line
    name: Yesterday Rainfall
    unit_of_measurement: "mm"
    scan_interval: 10800
    command: "python3 /config/getrain.py"
    
  - platform: mqtt
    state_topic: '/home/multisensor1'
    name: 'Temperature'
    unit_of_measurement: '°C'
    value_template: '{{ value_json.temperature }}'
    
  - platform: mqtt
    state_topic: '/home/multisensor1'
    name: 'Humidity'
    unit_of_measurement: '%'
    value_template: '{{ value_json.humidity }}'
    
  - platform: mqtt
    state_topic: '/home/heatstate'
    name: 'Heat State'
    value_template: '{{ value_json.heatstate }}'
    
  - platform: mqtt
    state_topic: '/home/basement/flood'
    name: 'Flood'
    
  - platform: mqtt
    state_topic: '/home/TH_sensor1'
    name: 'Remote Temperature'
    unit_of_measurement: '°C'
    value_template: '{{ value_json.temperature }}'
    
  - platform: mqtt
    state_topic: '/home/TH_sensor1'
    name: 'Remote Humidity'
    unit_of_measurement: '%'
    value_template: '{{ value_json.humidity }}'
    
  - platform: cert_expiry
    host: home-assistant.io